// Generated by CoffeeScript 1.6.2
var Mocha, Mycha, child, fs, path;

Mocha = require('mocha');

fs = require('fs');

path = require('path');

child = require('child_process');

Mycha = (function() {
  function Mycha(projectDir, options) {
    if (options == null) {
      options = {};
    }
    this.stdout = options.stdout || process.stdout;
    this.stderr = options.stdin || process.stderr;
    this.reporter = options.reporter || 'dot';
    this.testDir = path.join(projectDir, 'test');
  }

  Mycha.prototype.getTestFiles = function() {
    var files, helper;

    files = [];
    helper = function(dir, files) {
      var file, filePath, stat, _i, _len, _ref, _results;

      _ref = fs.readdirSync(dir);
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        if (file[0] === '.') {
          continue;
        }
        filePath = path.resolve("" + dir + "/" + file);
        stat = fs.statSync(filePath);
        if (stat.isFile()) {
          _results.push(files.push(filePath));
        } else if (stat.isDirectory()) {
          _results.push(helper(filePath, files));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };
    helper.call(helper, this.testDir, files);
    return files;
  };

  Mycha.prototype.run = function(callback) {
    var args, childProcess;

    args = ["--compilers", "coffee:coffee-script", "--reporter", this.reporter, "--colors", "" + __dirname + "/helper.js"];
    args = args.concat(this.getTestFiles());
    childProcess = child.spawn("" + __dirname + "/../node_modules/mocha/bin/mocha", args);
    childProcess.stdout.pipe(this.stdout);
    childProcess.stderr.pipe(this.stderr);
    if (callback) {
      return childProcess.on('exit', callback);
    }
  };

  return Mycha;

})();

module.exports = Mycha;
